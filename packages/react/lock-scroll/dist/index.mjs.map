{"mappings":"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","sources":["packages/react/lock-scroll/src/index.ts","packages/react/lock-scroll/src/useScrollLocker.tsx","packages/react/lock-scroll/src/lockBody.ts","packages/react/lock-scroll/src/utils.ts","packages/react/lock-scroll/src/getScrollBarSize.ts"],"sourcesContent":["export { default as useScrollLocker } from \"./useScrollLocker\";\n","import React, { useLayoutEffect } from \"react\";\nimport { injectStyle, removeStyle } from \"./lockBody\";\nimport getScrollBarSize from \"./getScrollBarSize\";\nimport { isBodyOverflowing } from \"./utils\";\n\nconst UNIQUE_ID = `rc-lockbody-${Date.now()}`;\nlet uuid = 0;\n\nexport default function useScrollLocker(lock?: boolean) {\n  const mergedLock = !!lock;\n  const [id] = React.useState(() => {\n    uuid += 1;\n    return `${UNIQUE_ID}_${uuid}`;\n  });\n\n  useLayoutEffect(() => {\n    if (mergedLock) {\n      const scrollbarSize = getScrollBarSize();\n      const isOverflow = isBodyOverflowing();\n\n      injectStyle(\n        `\nhtml body {\n  overflow-y: hidden;\n  ${isOverflow ? `width: calc(100% - ${scrollbarSize}px);` : \"\"}\n}`,\n        id\n      );\n    } else {\n      removeStyle(id);\n    }\n\n    return () => {\n      removeStyle(id);\n    };\n  }, [mergedLock, id]);\n}\n","// https://github.com/react-component/util/blob/master/src/Dom/dynamicCSS.ts 简易版本\nimport { canUseDom } from \"./utils\";\n\nconst MarkKey = \"data-key\";\n\ninterface Options {\n  csp?: { nonce?: string };\n}\n\nfunction getContainer() {\n  return document.querySelector(\"head\") || document.body;\n}\n\nexport function injectStyle(css: string, key: string, option?: Options) {\n  if (!canUseDom()) {\n    return null;\n  }\n  const { csp } = option || {};\n  const styleNode = document.createElement(\"style\");\n  styleNode.setAttribute(MarkKey, key);\n  if (csp?.nonce) {\n    styleNode.nonce = csp?.nonce;\n  }\n  styleNode.innerHTML = css;\n  const container = getContainer();\n  container.appendChild(styleNode);\n  return styleNode;\n}\n\nexport function removeStyle(key: string) {\n  document.querySelector(`style[data-key='${key}']`)?.remove();\n}\n","export function canUseDom() {\n  return !!(\n    typeof window !== \"undefined\" &&\n    window.document &&\n    window.document.createElement\n  );\n}\n\nexport function isBodyOverflowing() {\n  return (\n    document.body.scrollHeight >\n      (window.innerHeight || document.documentElement.clientHeight) &&\n    window.innerWidth > document.body.offsetWidth\n  );\n}\n","// https://github.com/react-component/util/blob/master/src/getScrollBarSize.tsx\nlet cached: number;\n\nexport default function getScrollBarSize(fresh?: boolean) {\n  if (typeof document === \"undefined\") {\n    return 0;\n  }\n\n  if (fresh || cached === undefined) {\n    const inner = document.createElement(\"div\");\n    inner.style.width = \"100%\";\n    inner.style.height = \"200px\";\n\n    const outer = document.createElement(\"div\");\n    const outerStyle = outer.style;\n\n    outerStyle.position = \"absolute\";\n    outerStyle.top = \"0\";\n    outerStyle.left = \"0\";\n    outerStyle.pointerEvents = \"none\";\n    outerStyle.visibility = \"hidden\";\n    outerStyle.width = \"200px\";\n    outerStyle.height = \"150px\";\n    outerStyle.overflow = \"hidden\";\n\n    outer.appendChild(inner);\n\n    document.body.appendChild(outer);\n\n    const widthContained = inner.offsetWidth;\n    outer.style.overflow = \"scroll\";\n    let widthScroll = inner.offsetWidth;\n\n    if (widthContained === widthScroll) {\n      widthScroll = outer.clientWidth;\n    }\n\n    document.body.removeChild(outer);\n\n    cached = widthContained - widthScroll;\n  }\n  return cached;\n}\n"],"names":[],"version":3,"file":"index.mjs.map"}